#pragma checksum "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8bbf069b888be6bdd943b6be06750fea81b04cfc"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorAgenda.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using BlazorAgenda.Client;
    using BlazorAgenda.Client.Shared;
    using BlazorAgenda.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/fetchdata")]
    public class FetchData : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddMarkupContent(0, "<h1>Weather forecast</h1>\n\n");
            builder.AddMarkupContent(1, "<p>This component demonstrates fetching data from the server.</p>\n\n");
#line 9 "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml"
 if (test == null)
{

#line default
#line hidden
            builder.AddContent(2, "    ");
            builder.AddMarkupContent(3, "<p><em>Loading...</em></p>\n");
#line 12 "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml"
}
else
{

#line default
#line hidden
            builder.AddContent(4, "    ");
            builder.OpenElement(5, "p");
            builder.AddContent(6, test);
            builder.CloseElement();
            builder.AddContent(7, "\n");
#line 16 "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml"
}

#line default
#line hidden
            builder.AddContent(8, "\n");
#line 18 "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml"
 if (forecasts == null)
{

#line default
#line hidden
            builder.AddContent(9, "    ");
            builder.AddMarkupContent(10, "<p><em>Loading...</em></p>\n");
#line 21 "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml"
}
else
{

#line default
#line hidden
            builder.AddContent(11, "    ");
            builder.OpenElement(12, "table");
            builder.AddAttribute(13, "class", "table");
            builder.AddContent(14, "\n        ");
            builder.AddMarkupContent(15, "<thead>\n            <tr>\n                <th>Date</th>\n                <th>Temp. (C)</th>\n                <th>Temp. (F)</th>\n                <th>Summary</th>\n            </tr>\n        </thead>\n        ");
            builder.OpenElement(16, "tbody");
            builder.AddContent(17, "\n");
#line 34 "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml"
             foreach (var forecast in forecasts)
            {

#line default
#line hidden
            builder.AddContent(18, "                ");
            builder.OpenElement(19, "tr");
            builder.AddContent(20, "\n                    ");
            builder.OpenElement(21, "td");
            builder.AddContent(22, forecast.Date.ToShortDateString());
            builder.CloseElement();
            builder.AddContent(23, "\n                    ");
            builder.OpenElement(24, "td");
            builder.AddContent(25, forecast.TemperatureC);
            builder.CloseElement();
            builder.AddContent(26, "\n                    ");
            builder.OpenElement(27, "td");
            builder.AddContent(28, forecast.TemperatureF);
            builder.CloseElement();
            builder.AddContent(29, "\n                    ");
            builder.OpenElement(30, "td");
            builder.AddContent(31, forecast.Summary);
            builder.CloseElement();
            builder.AddContent(32, "\n                ");
            builder.CloseElement();
            builder.AddContent(33, "\n");
#line 42 "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml"
            }

#line default
#line hidden
            builder.AddContent(34, "        ");
            builder.CloseElement();
            builder.AddContent(35, "\n    ");
            builder.CloseElement();
            builder.AddContent(36, "\n");
#line 45 "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml"
}

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 47 "C:\Users\Jeroe\Documents\GitHub\BlazorAgendaProject\BlazorAgenda\BlazorAgenda.Client\Pages\FetchData.cshtml"
            
WeatherForecast[] forecasts;
string test;

protected override async Task OnInitAsync()
{
    test = await Http.GetStringAsync("api/SampleData/Test");

}
    

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
